{"version":3,"sources":["webpack:///./src/components/PressGrid.js","webpack:///./src/components/PressList.js","webpack:///./src/pages/press.js"],"names":["PressStyle","styled","div","PressGrid","press","href","pressLink","target","rel","className","name","PressGridStyle","ProjectsList","presses","SEO","title","map","key","id","PressPage","data","nodes"],"mappings":"kLAKMA,G,oBAAaC,IAAOC,IAAV,2EAAGD,CAAH,6jBA6CD,SAASE,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAClC,OACE,kBAACJ,EAAD,KACE,uBAAGK,KAAMD,EAAME,UAAWC,OAAO,SAASC,IAAI,cAM5C,yBAAKC,UAAU,aACb,uBAAGA,UAAU,aAAaL,EAAMM,S,gBCvDpCC,EAAiBV,IAAOC,IAAV,+EAAGD,CAAH,+MAYL,SAASW,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OACE,oCACE,kBAACC,EAAA,EAAD,CAAKC,MAAM,UACX,wBAAIN,UAAU,aAAd,SACA,kBAACE,EAAD,KACGE,EAAQG,KAAI,SAACZ,GAAD,OACX,yBAAKa,IAAKb,EAAMc,IACd,kBAACf,EAAD,CAAWc,IAAKb,EAAMc,GAAId,MAAOA,UCrB9B,SAASe,EAAT,GAA8B,IACrCN,EADoC,EAARO,KACbhB,MAAMiB,MAE3B,OACE,oCACE,kBAAC,EAAD,CAAWR,QAASA","file":"component---src-pages-press-js-df4c427202c86abd3aa4.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport styled from 'styled-components';\n\nconst PressStyle = styled.div`\n  display: flex;\n  @supports not (grid-template-rows: subgrid) {\n    grid-template-rows: auto auto;\n  }\n  grid-template-rows: subgrid;\n  /* column-gap: 10px; */\n  row-gap: 2px;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  h2,\n  p {\n    margin: 0;\n  }\n  .pressImage {\n    max-height: 100%;\n    /* width: 100%; */\n    object-fit: contain;\n    border: 1px solid #85493e;\n  }\n  .pressImage:hover {\n    border: 1px solid #c4ffe7;\n  }\n  .presstext {\n    font-size: 18px;\n  }\n  a {\n    color: 'black';\n  }\n  a:hover {\n    color: #c4ffe7;\n  }\n  @media only screen and (min-width: 300px) and (max-width: 400px) {\n    .presstext {\n      font-size: 12px;\n    }\n  }\n  @media only screen and (min-width: 400px) and (max-width: 768px) {\n    .presstext {\n      font-size: 14px;\n    }\n  }\n`;\n\nexport default function PressGrid({ press }) {\n  return (\n    <PressStyle>\n      <a href={press.pressLink} target=\"_blank\" rel=\"noreferrer\">\n        {/* <img\n          className=\"pressImage\"\n          src={press.image.asset.url}\n          alt={press.name}\n        /> */}\n        <div className=\"pressInfo\">\n          <p className=\"presstext\">{press.name}</p>\n        </div>\n      </a>\n    </PressStyle>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport PressGrid from './PressGrid';\nimport SEO from './SEO';\n\nconst PressGridStyle = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(1fr));\n  gap: 2rem;\n  padding-bottom: 70px;\n  margin-top: 50px;\n  @media only screen and (min-width: 300px) and (max-width: 700px) {\n    gap: 0.5rem;\n    margin-top: 10px;\n  }\n`;\n\nexport default function ProjectsList({ presses }) {\n  return (\n    <>\n      <SEO title=\"Press\" />\n      <h2 className=\"pageTitle\">Press</h2>\n      <PressGridStyle>\n        {presses.map((press) => (\n          <div key={press.id}>\n            <PressGrid key={press.id} press={press} />\n          </div>\n        ))}\n      </PressGridStyle>\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { graphql } from 'gatsby';\nimport PressList from '../components/PressList';\n\nexport default function PressPage({ data }) {\n  const presses = data.press.nodes;\n\n  return (\n    <>\n      <PressList presses={presses} />\n    </>\n  );\n}\n\nexport const pressQuery = graphql`\n  query {\n    press: allSanityPress(sort: { fields: order, order: ASC }) {\n      nodes {\n        name\n        id\n        pressLink\n        year\n        image {\n          asset {\n            url\n            fixed(width: 220, height: 300) {\n              ...GatsbySanityImageFixed\n            }\n            fluid(maxWidth: 300) {\n              ...GatsbySanityImageFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}